<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.2.3-SNAPSHOT">
  <xs:element name="Master">
    <xs:annotation>
      <xs:documentation>org.frankframework.frankdoc.testtarget.examples.config.children2.Master</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="MasterType" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Module">
    <xs:annotation>
      <xs:documentation>Root element for XML files that contain multiple adapters and/or cron jobs and are included as entity reference in another XML file. It does not influence the behavior of your Frank config.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group ref="MasterDeclaredChildGroup" />
      <xs:attribute ref="active" />
      <xs:anyAttribute namespace="##other" processContents="skip" />
    </xs:complexType>
  </xs:element>
  <xs:element name="C">
    <xs:annotation>
      <xs:documentation>org.frankframework.frankdoc.testtarget.examples.config.children2.C</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.config.children2.C" use="prohibited" />
      <xs:attribute ref="active" />
      <xs:attribute name="elementRole" type="xs:string" fixed="c" use="prohibited" />
      <xs:anyAttribute namespace="##other" processContents="skip" />
    </xs:complexType>
  </xs:element>
  <xs:element name="D">
    <xs:annotation>
      <xs:documentation>org.frankframework.frankdoc.testtarget.examples.config.children2.D</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.config.children2.D" use="prohibited" />
      <xs:attribute ref="active" />
      <xs:attribute name="elementRole" type="xs:string" fixed="d" use="prohibited" />
      <xs:anyAttribute namespace="##other" processContents="skip" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MasterType">
    <xs:group ref="MasterDeclaredChildGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.config.children2.Master" use="prohibited" />
    <xs:attribute ref="active" />
    <xs:anyAttribute namespace="##other" processContents="skip" />
  </xs:complexType>
  <xs:group name="MasterDeclaredChildGroup">
    <xs:sequence>
      <xs:element ref="Module" minOccurs="0" maxOccurs="unbounded" />
      <xs:group ref="AElementGroup" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  <xs:group name="AElementGroup">
    <xs:choice>
      <xs:element name="A">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:group ref="BElementGroup" />
              <xs:element ref="C" />
              <xs:element ref="D" />
            </xs:choice>
          </xs:sequence>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="AElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroup">
    <xs:choice>
      <xs:element name="B">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
          <xs:attribute name="className" type="xs:string" default="org.frankframework.frankdoc.testtarget.examples.config.children2.ChildWithConflictingElement" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="BElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroupBase">
    <xs:choice />
  </xs:group>
  <xs:group name="AElementGroupBase">
    <xs:choice>
      <xs:element name="Level1A">
        <xs:annotation>
          <xs:documentation>Level1A - org.frankframework.frankdoc.testtarget.examples.config.children2.Level1 used as A</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Level1Type">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Level2A">
        <xs:annotation>
          <xs:documentation>Level2A - org.frankframework.frankdoc.testtarget.examples.config.children2.Level2 used as A</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Level2Type">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Level3A">
        <xs:annotation>
          <xs:documentation>Level3A - org.frankframework.frankdoc.testtarget.examples.config.children2.Level3 used as A</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Level3Type">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="Level1Type">
    <xs:group ref="Level1DeclaredChildGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.config.children2.Level1" use="prohibited" />
    <xs:attribute ref="active" />
    <xs:anyAttribute namespace="##other" processContents="skip" />
  </xs:complexType>
  <xs:group name="Level1DeclaredChildGroup">
    <xs:sequence>
      <xs:group ref="BElementGroup" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  <xs:complexType name="Level2Type">
    <xs:group ref="Level2CumulativeChildGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.config.children2.Level2" use="prohibited" />
    <xs:attribute ref="active" />
    <xs:anyAttribute namespace="##other" processContents="skip" />
  </xs:complexType>
  <xs:group name="Level2DeclaredChildGroup">
    <xs:sequence>
      <xs:element ref="C" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  <xs:group name="Level2CumulativeChildGroup">
    <xs:sequence>
      <xs:group ref="Level2DeclaredChildGroup" />
      <xs:group ref="Level1DeclaredChildGroup" />
    </xs:sequence>
  </xs:group>
  <xs:complexType name="Level3Type">
    <xs:group ref="Level3CumulativeChildGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.config.children2.Level3" use="prohibited" />
    <xs:attribute ref="active" />
    <xs:anyAttribute namespace="##other" processContents="skip" />
  </xs:complexType>
  <xs:group name="Level3DeclaredChildGroup">
    <xs:sequence>
      <xs:element ref="D" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  <xs:group name="Level3CumulativeChildGroup">
    <xs:sequence>
      <xs:group ref="Level3DeclaredChildGroup" />
      <xs:group ref="Level2CumulativeChildGroup" />
    </xs:sequence>
  </xs:group>
  <xs:simpleType name="frankBoolean">
    <xs:restriction base="xs:string">
      <xs:pattern value="(true|false)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frankInt">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\+|-)?[0-9]+)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="active">
    <xs:annotation>
      <xs:documentation>If defined and empty or false, then this element and all its children are ignored</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="!?(($\{[^\}]+\})|([tT][rR][uU][eE])|([fF][aA][lL][sS][eE]))" />
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="variableRef">
    <xs:restriction base="xs:string">
      <xs:pattern value="$\{[^\}]+\}" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>