<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<digester-rules>
  <!-- Root pattern, ignored -->
  <rule pattern="a" registerMethod="addA"/>
  <!-- We do not test pattern violation when the root comes into play. Not implemented -->
  <rule pattern="*/b" registerMethod="addB"/>
  <rule pattern="*/b/c" registerMethod="addC"/>
  <!-- "c" does not have registerD(), config child violates -->
  <rule pattern="*/c/d" registerMethod="addD"/>
  <!-- "b" has child "d" and "d" has child "e". The first pass over DigesterRulesPattern.ViolationChecker
       should accept, but the second should omit "e" because "d" was omitted -->
  <rule pattern="*/d/e" registerMethod="addE"/>
  <!-- Test text config child that does not violate -->
  <rule pattern="*/b/i" registerTextMethod="addI"/>
  <!-- "b" does not have registerJ - text config child violates -->
  <rule pattern="*/b/j" registerTextMethod="addJ"/>
</digester-rules>
