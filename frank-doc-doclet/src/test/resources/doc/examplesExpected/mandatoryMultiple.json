{
    "metadata": {
        "version": "1.2.3-SNAPSHOT"
    },
    "types": {
        "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Child": [
            "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Child"
        ],
        "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.IInterface": [
            "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.InterfaceImpl"
        ],
        "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Master": [
            "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Master"
        ],
        "Module": [
            "Module"
        ]
    },
    "elements": {
        "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Child": {
            "name": "C",
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.InterfaceImpl": {
            "name": "InterfaceImpl",
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Master": {
            "name": "Master",
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            },
            "children": [
                {
                    "multiple": true,
                    "roleName": "module",
                    "description": "Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.",
                    "type": "Module"
                },
                {
                    "mandatory": true,
                    "multiple": true,
                    "roleName": "a",
                    "type": "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.IInterface"
                },
                {
                    "mandatory": true,
                    "multiple": true,
                    "roleName": "p"
                },
                {
                    "mandatory": true,
                    "multiple": true,
                    "roleName": "c",
                    "type": "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Child"
                }
            ]
        },
        "Module": {
            "name": "Module",
            "description": "Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations."
        },
        "java.lang.Object": {
            "name": "Object",
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        }
    },
    "elementNames": {
        "C": {
            "className": "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Child"
        },
        "InterfaceImplA": {
            "className": "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.InterfaceImpl"
        },
        "Master": {
            "className": "org.frankframework.frankdoc.testtarget.examples.mandatory.multiple.Master"
        },
        "Module": {
            "className": "Module",
            "labels": {
                "FrankDocGroup": "Other"
            }
        }
    },
    "enums": {}
}
