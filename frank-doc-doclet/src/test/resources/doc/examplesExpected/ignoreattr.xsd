<?xml version="1.0" encoding="UTF-8"?>
<!-- Public FrankDoc XSD, should be used within an IDE to validate a configuration. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.2.3-SNAPSHOT">
  <xs:element name="Master">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="MasterType" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Module">
    <xs:annotation>
      <xs:documentation>Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group ref="MasterDeclaredChildGroup" />
      <xs:attribute ref="active" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MasterType">
    <xs:group ref="MasterDeclaredChildGroup" />
    <xs:attribute ref="active" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.ignore.attributes.Master" use="prohibited" />
  </xs:complexType>
  <xs:group name="MasterDeclaredChildGroup">
    <xs:sequence>
      <xs:element ref="Module" minOccurs="0" maxOccurs="unbounded" />
      <xs:group ref="AElementGroup" minOccurs="0" maxOccurs="unbounded" />
      <xs:group ref="BElementGroup" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  <xs:group name="AElementGroup">
    <xs:choice>
      <xs:element name="A">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="AElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="AElementGroupBase">
    <xs:choice>
      <xs:element name="GrandChildA">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="GrandChildType">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="NotSuppressingChildA">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="NotSuppressingChildType">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="ParentA">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ParentType">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="SuppressingChildA">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="SuppressingChildType">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="GrandChildType">
    <xs:attributeGroup ref="GrandChildCumulativeAttributeGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.ignore.attributes.GrandChild" use="prohibited" />
  </xs:complexType>
  <xs:attributeGroup name="GrandChildDeclaredAttributeGroup">
    <xs:attribute name="suppressedAttribute2" type="xs:string">
      <xs:annotation>
        <xs:documentation>Documented, so re-introduced as attribute</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="GrandChildCumulativeAttributeGroup">
    <xs:attributeGroup ref="GrandChildDeclaredAttributeGroup" />
    <xs:attributeGroup ref="SuppressingChildDeclaredAttributeGroup" />
    <xs:attribute name="suppressedAttribute" type="xs:string" />
    <xs:attribute name="notSuppressedAttribute" type="xs:string" />
    <xs:attribute ref="active" />
  </xs:attributeGroup>
  <xs:complexType name="SuppressingChildType">
    <xs:attributeGroup ref="SuppressingChildCumulativeAttributeGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.ignore.attributes.SuppressingChild" use="prohibited" />
  </xs:complexType>
  <xs:attributeGroup name="SuppressingChildDeclaredAttributeGroup">
    <xs:attribute name="childAttribute" type="xs:string" />
  </xs:attributeGroup>
  <xs:attributeGroup name="SuppressingChildCumulativeAttributeGroup">
    <xs:attributeGroup ref="SuppressingChildDeclaredAttributeGroup" />
    <xs:attributeGroup ref="ParentDeclaredAttributeGroup" />
  </xs:attributeGroup>
  <xs:complexType name="ParentType">
    <xs:attributeGroup ref="ParentDeclaredAttributeGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.ignore.attributes.Parent" use="prohibited" />
  </xs:complexType>
  <xs:attributeGroup name="ParentDeclaredAttributeGroup">
    <xs:attribute name="suppressedAttribute" type="xs:string" />
    <xs:attribute name="suppressedAttribute2" type="xs:string" />
    <xs:attribute name="notSuppressedAttribute" type="xs:string" />
    <xs:attribute ref="active" />
  </xs:attributeGroup>
  <xs:complexType name="NotSuppressingChildType">
    <xs:attributeGroup ref="NotSuppressingChildCumulativeAttributeGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.examples.ignore.attributes.NotSuppressingChild" use="prohibited" />
  </xs:complexType>
  <xs:attributeGroup name="NotSuppressingChildDeclaredAttributeGroup">
    <xs:attribute name="childAttribute" type="xs:string">
      <xs:annotation>
        <xs:documentation>Documented child attribute</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="NotSuppressingChildCumulativeAttributeGroup">
    <xs:attributeGroup ref="NotSuppressingChildDeclaredAttributeGroup" />
    <xs:attributeGroup ref="ParentDeclaredAttributeGroup" />
  </xs:attributeGroup>
  <xs:group name="BElementGroup">
    <xs:choice>
      <xs:element name="B">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="BElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroupBase">
    <xs:choice>
      <xs:element name="GrandChildB">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="GrandChildType">
              <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="SuppressingChildB">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="SuppressingChildType">
              <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:simpleType name="frankBoolean">
    <xs:restriction base="xs:string">
      <xs:pattern value="(true|false)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frankInt">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\+|-)?[0-9]+)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="active">
    <xs:annotation>
      <xs:documentation>If defined and empty or false, then this element and all its children are ignored</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="!?(($\{[^\}]+\})|([tT][rR][uU][eE])|([fF][aA][lL][sS][eE]))" />
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="variableRef">
    <xs:restriction base="xs:string">
      <xs:pattern value="$\{[^\}]+\}" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
