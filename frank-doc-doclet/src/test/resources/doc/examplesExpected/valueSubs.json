{
    "metadata": {
        "version": "1.2.3-SNAPSHOT"
    },
    "types": {
        "org.frankframework.frankdoc.testtarget.examples.valueSubs.Other": [
            "org.frankframework.frankdoc.testtarget.examples.valueSubs.Other"
        ],
        "org.frankframework.frankdoc.testtarget.examples.valueSubs.WithValueSubstitutions": [
            "org.frankframework.frankdoc.testtarget.examples.valueSubs.WithValueSubstitutions"
        ],
        "Module": [
            "Module"
        ]
    },
    "elements": {
        "org.frankframework.frankdoc.testtarget.examples.valueSubs.Other": {
            "name": "A",
            "description": "In the class description, we substitute <code>my-constant</code>",
            "elementNames": [
                {
                    "name": "A"
                }
            ],
            "attributes": {
                "myAttribute": {
                    "description": "Attribute description that cites <code>my-constant</code>"
                },
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            },
            "parametersDescription": "In the text that defines the meaning of parameters, we substitute <code>my-constant</code>",
            "parameters": {
                "<code>my-constant</code>": {
                    "description": "Description of this parameter is <code>my-constant</code>"
                }
            },
            "forwards": {
                "<code>my-constant</code>": {
                    "description": "Forward description <code>my-constant</code>"
                }
            }
        },
        "Module": {
            "name": "Module",
            "description": "Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.",
            "elementNames": [
                {
                    "labels": {
                        "FrankDocGroup": [
                            "Other"
                        ]
                    },
                    "name": "Module"
                }
            ]
        },
        "java.lang.Object": {
            "name": "Object",
            "elementNames": [],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.examples.valueSubs.WithValueSubstitutions": {
            "name": "WithValueSubstitutions",
            "description": "In the class description, we substitute <code>my-constant</code>",
            "elementNames": [
                {
                    "name": "WithValueSubstitutions"
                }
            ],
            "attributes": {
                "myAttribute": {
                    "description": "In an attribute description, we substitute <code>my-constant</code>"
                },
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            },
            "children": [
                {
                    "multiple": true,
                    "roleName": "module",
                    "description": "Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.",
                    "type": "Module"
                },
                {
                    "multiple": true,
                    "roleName": "a",
                    "type": "org.frankframework.frankdoc.testtarget.examples.valueSubs.Other"
                }
            ],
            "parametersDescription": "In the text that defines the meaning of parameters, we substitute <code>my-constant</code>",
            "parameters": {
                "<code>my-constant</code>": {
                    "description": "Description of this parameter is <code>my-constant</code>"
                }
            },
            "forwards": {
                "<code>my-constant</code>": {
                    "description": "Forward description <code>my-constant</code>"
                }
            }
        }
    },
    "enums": {}
}
