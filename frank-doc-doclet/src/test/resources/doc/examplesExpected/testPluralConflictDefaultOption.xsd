<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.2.3-SNAPSHOT">
  <xs:element name="Master">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="MasterType" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Module">
    <xs:annotation>
      <xs:documentation>Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group ref="MasterPluralConfigChildGroup" />
      <xs:attribute ref="active" />
      <xs:anyAttribute namespace="##other" processContents="skip" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MasterType">
    <xs:group ref="MasterPluralConfigChildGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.plural.config.defaultClassname.Master" use="prohibited" />
    <xs:attribute ref="active" />
    <xs:anyAttribute namespace="##other" processContents="skip" />
  </xs:complexType>
  <xs:group name="MasterPluralConfigChildGroup">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="Module" minOccurs="0" maxOccurs="unbounded" />
        <xs:group ref="AElementGroup" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:group name="AElementGroup">
    <xs:choice>
      <xs:group ref="AElementGroupBase" />
      <xs:group ref="AElementGroupBase_2" />
    </xs:choice>
  </xs:group>
  <xs:group name="AElementGroupBase">
    <xs:choice />
  </xs:group>
  <xs:group name="AElementGroupBase_2">
    <xs:choice>
      <xs:element name="MyElementA">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="MyElementType">
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="MyElementType">
    <xs:group ref="MyElementPluralConfigChildGroup" />
    <xs:attribute name="className" type="xs:string" fixed="org.frankframework.frankdoc.testtarget.plural.config.defaultClassname.MyElement" use="prohibited" />
    <xs:attribute ref="active" />
    <xs:anyAttribute namespace="##other" processContents="skip" />
  </xs:complexType>
  <xs:group name="MyElementPluralConfigChildGroup">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="BElementGroup" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:group name="BElementGroup">
    <xs:choice>
      <xs:group ref="BElementGroupBase" />
      <xs:group ref="BElementGroupBase_2" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroupBase">
    <xs:choice />
  </xs:group>
  <xs:group name="BElementGroupBase_2">
    <xs:choice />
  </xs:group>
  <xs:simpleType name="frankBoolean">
    <xs:restriction base="xs:string">
      <xs:pattern value="(true|false)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frankInt">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\+|-)?[0-9]+)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="active">
    <xs:annotation>
      <xs:documentation>If defined and empty or false, then this element and all its children are ignored</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="!?(($\{[^\}]+\})|([tT][rR][uU][eE])|([fF][aA][lL][sS][eE]))" />
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="variableRef">
    <xs:restriction base="xs:string">
      <xs:pattern value="$\{[^\}]+\}" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>