{
    "metadata": {
        "version": "1.2.3-SNAPSHOT"
    },
    "types": {
        "org.frankframework.frankdoc.testtarget.category.IChild": [
            "org.frankframework.frankdoc.testtarget.category.ChildConfigChildA",
            "org.frankframework.frankdoc.testtarget.category.ChildConfigChildB",
            "org.frankframework.frankdoc.testtarget.category.ChildConfigChildC"
        ],
        "org.frankframework.frankdoc.testtarget.category.Start": [
            "org.frankframework.frankdoc.testtarget.category.Start"
        ],
        "Module": [
            "Module"
        ]
    },
    "elements": {
        "org.frankframework.frankdoc.testtarget.category.ChildConfigChildA": {
            "name": "ChildConfigChildA",
            "elementNames": [
                {
                    "labels": {
                        "CategoryA": [
                            "CategoryAValue_2"
                        ],
                        "CategoryC": [
                            "CategoryCValue_2"
                        ],
                        "CategoryB": [
                            "CategoryBValue_2"
                        ]
                    },
                    "name": "ChildConfigChildARoleNameIChild"
                }
            ],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }

            }
        },
        "org.frankframework.frankdoc.testtarget.category.ChildConfigChildB": {
            "name": "ChildConfigChildB",
            "elementNames": [
                {
                    "labels": {
                        "CategoryA": [
                            "CategoryAValue_1"
                        ],
                        "CategoryC": [
                            "CategoryCValue_1"
                        ],
                        "CategoryB": [
                            "CategoryBValue_1"
                        ]
                    },
                    "name": "ChildConfigChildBRoleNameIChild"
                }
            ],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.category.ChildConfigChildC": {
            "name": "ChildConfigChildC",
            "elementNames": [
                {
                    "labels": {
                        "CategoryC": [
                            "CategoryCValue_1"
                        ]
                    },
                    "name": "ChildConfigChildCRoleNameIChild"
                }
            ],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.category.ChildConfigParent": {
            "name": "ChildConfigParent",
            "elementNames": [],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "Module": {
            "name": "Module",
            "description": "Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.",
            "elementNames": [
                {
                    "labels": {
                        "FrankDocGroup": [
                            "Other"
                        ]
                    },
                    "name": "Module"
                }
            ]
        },
        "java.lang.Object": {
            "name": "Object",
            "elementNames": [],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.category.ParentOfStart": {
            "name": "ParentOfStart",
            "abstract": true,
            "elementNames": [],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            }
        },
        "org.frankframework.frankdoc.testtarget.category.Start": {
            "name": "Start",
            "elementNames": [
                {
                    "labels": {
                        "CategoryA": [
                            "CategoryAValue_1"
                        ],
                        "CategoryC": [
                            "CategoryCValue_3",
                            "CategoryCValue_4"
                        ],
                        "CategoryB": [
                            "CategoryBValue_1"
                        ]
                    },
                    "name": "Start"
                }
            ],
            "attributes": {
                "active": {
                    "description": "If defined and empty or false, then this element and all its children are ignored"
                }
            },
            "children": [
                {
                    "multiple": true,
                    "roleName": "module",
                    "description": "Wrapper element to help split up large configuration files into smaller valid XML files. It may be used as root tag when an XML file contains multiple adapters and/or jobs. The Module element itself does not influence the behavior of Frank configurations.",
                    "type": "Module"
                },
                {
                    "multiple": false,
                    "roleName": "roleNameIChild",
                    "type": "org.frankframework.frankdoc.testtarget.category.IChild"
                }
            ]
        }
    },
    "enums": {},
    "labels": {
        "CategoryA": [
            "CategoryAValue_1",
            "CategoryAValue_2"
        ],
        "CategoryB": [
            "CategoryBValue_1",
            "CategoryBValue_2"
        ],
        "CategoryC": [
            "CategoryCValue_1",
            "CategoryCValue_2",
            "CategoryCValue_3",
            "CategoryCValue_4"
        ]
    }
}
